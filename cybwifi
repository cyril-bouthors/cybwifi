#!/bin/bash
#
# Copyright (C) 2012-2013 Cyril Bouthors <cyril@boutho.rs>
#
# This program is free software: you can redistribute it and/or modify it under
# the terms of the GNU General Public License as published by the Free Software
# Foundation, either version 3 of the License, or (at your option) any later
# version.
#
# This program is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along with
# this program. If not, see <http://www.gnu.org/licenses/>.
#

set -e -o pipefail

. $(dirname $0)/cybwifi.conf

# Stop all networks
ifdown $eth_dev || true
ifconfig $eth_dev down || true
ifdown wlan0 || true
/etc/init.d/openvpn stop

# Check if $eth_dev is connected
ifconfig $eth_dev up || true
sleep 5
if timeout 5 mii-tool $eth_dev 2>/dev/null | grep -qF 'link ok'
then
    ifdown $eth_dev
    ifup $eth_dev
    killall -s SIGUSR1 autossh 2>/dev/null || true
    exit
fi
ifconfig $eth_dev down || true

# Check if usb0 exists
if ifconfig -a | grep -qFw usb0
then
    ifdown usb0
    ifup usb0
    killall -s SIGUSR1 autossh 2>/dev/null || true
    exit
fi

ifconfig $interface up

iwlist $interface scanning | awk -F\" '/ESSID/ {print $2}' | while read essid
do
    # Check if ESSID is defined
    if [ -z "$essid" ]
    then
	continue
    fi

    # Check if key exists. Stolen from
    # http://superuser.com/questions/195598/test-if-element-is-in-array-in-bash
    if [[ ${keys["$essid"]+_} ]]
    then
	echo "$0: ====== found $essid ======"
	key=${keys[$essid]}
	cat > $file <<EOF
iface wlan0 inet dhcp
    wireless-txpower auto

#   WEP
#   wireless-essid $essid
#   wireless-key1 $key

#   WPA
    wpa-ssid $essid
EOF

	if [ ! -z "$key" -a "$key" != ' ' ]
	then
	    echo "    wpa-psk $key" >> $file
	else
	    echo "    wpa-key_mgmt NONE" >> $file
	fi

	ifdown wlan0
	ifdown $eth_dev || true
	# in case we configured $eth_dev manually
	ifconfig $eth_dev down || true
	ifup wlan0

	killall -s SIGUSR1 autossh 2>/dev/null || true
	exit
    fi
done

echo 'No known Wi-Fi network found'
